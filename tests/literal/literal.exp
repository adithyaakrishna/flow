Error ----------------------------------------------------------------------------------------------- enum_client.js:6:5

Cannot call `foo` with `"LOCATION"` bound to `x` because property `LOCATION` is missing in object literal [1].
[prop-missing]

   enum_client.js:6:5
   6| foo("LOCATION"); // error
          ^^^^^^^^^^

References:
   enum_client.js:4:23
   4| function foo(x: $Keys<typeof APIKeys>) { }
                            ^^^^^^^^^^^^^^ [1]


Error ---------------------------------------------------------------------------------------------- enum_client.js:10:5

Cannot call `bar` with `APIKeys.NAME` bound to `x` because property `name` is missing in object type [1]. [prop-missing]

   enum_client.js:10:5
   10| bar(APIKeys.NAME); // error: since "NAME" is not in the smaller enum
           ^^^^^^^^^^^^

References:
   enum_client.js:8:23
    8| function bar(x: $Keys<{age: number}>) { }
                             ^^^^^^^^^^^^^ [1]


Error --------------------------------------------------------------------------------------------- enum_client.js:18:19

Cannot assign `object[APIKeys.NAME]` to `name` because string [1] is incompatible with number [2]. [incompatible-type]

   enum_client.js:18:19
   18| var name:number = object[APIKeys.NAME]; // error: object.name is a string
                         ^^^^^^^^^^^^^^^^^^^^

References:
   enum_client.js:14:19
   14|   [APIKeys.NAME]: "FOO", // i.e., object.name = "FOO"
                         ^^^^^ [1]
   enum_client.js:18:10
   18| var name:number = object[APIKeys.NAME]; // error: object.name is a string
                ^^^^^^ [2]


Error --------------------------------------------------------------------------------------------- enum_client.js:22:18

Cannot assign `tuple[indices.red]` to `red` because number [1] is incompatible with string [2]. [incompatible-type]

   enum_client.js:22:18
   22| var red:string = tuple[indices.red]; // error: tuple[0] is a number
                        ^^^^^^^^^^^^^^^^^^

References:
   enum_client.js:21:14
   21| var tuple = [42, "hello", false];
                    ^^ [1]
   enum_client.js:22:9
   22| var red:string = tuple[indices.red]; // error: tuple[0] is a number
               ^^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ null.js:1:6

Cannot get `null['foo']` because null [1] does not have properties. [incompatible-use]

   null.js:1:6
   1| null['foo']; // Error
           ^^^^^

References:
   null.js:1:1
   1| null['foo']; // Error
      ^^^^ [1]


Error --------------------------------------------------------------------------------------------------- number.js:6:11

Cannot perform arithmetic operation because string [1] is not a number or bigint. [unsafe-arithmetic]

   number.js:6:11
   6|   return -x;
                ^

References:
   number.js:5:19
   5| function test2(x: string): number {
                        ^^^^^^ [1]



Found 6 errors
