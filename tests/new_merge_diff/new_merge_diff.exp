Error ------------------------------------------------------------------------------------------------------ main.js:6:2

Cannot cast `x1` to empty because number [1] is incompatible with empty [2]. [incompatible-cast]

   main.js:6:2
    6| (x1: empty);
        ^^

References:
   get_prop_union.js:15:23
   15| declare export var x: typeof c.f;
                             ^^^^^^^^^^ [1]
   main.js:6:6
    6| (x1: empty);
            ^^^^^ [2]


Error ------------------------------------------------------------------------------------------------------ main.js:6:2

Cannot cast `x1` to empty because string [1] is incompatible with empty [2]. [incompatible-cast]

   main.js:6:2
    6| (x1: empty);
        ^^

References:
   get_prop_union.js:15:23
   15| declare export var x: typeof c.f;
                             ^^^^^^^^^^ [1]
   main.js:6:6
    6| (x1: empty);
            ^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:34:2

Cannot cast `0` to `S4` because number [1] is incompatible with string [2]. [incompatible-cast]

   main.js:34:2
   34| (0: S4); // error number ~> string
        ^ [1]

References:
   recursive_types.js:12:17
   12| export type S = string | R; // okay
                       ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- main.js:35:2

Cannot cast `0` to `R4` because number [1] is incompatible with `R` [2]. [incompatible-cast]

   main.js:35:2
   35| (0: R4); // error number ~> R (obj)
        ^ [1]

References:
   main.js:35:5
   35| (0: R4); // error number ~> R (obj)
           ^^ [2]


Error ------------------------------------------------------------------------------------------ recursive_module.js:3:9

Invalid trivially recursive definition of `p` in an export position.  [invalid-recursive-exported-annotation]

   3| import {p} from './recursive_module';
              ^


Error ---------------------------------------------------------------------------------- recursive_module_cycle_A.js:3:7

Invalid trivially recursive definition of `b` in an export position.  [invalid-recursive-exported-annotation]

   3| const b = require('./recursive_module_cycle_B');
            ^


Error ---------------------------------------------------------------------------------- recursive_module_cycle_B.js:3:7

Invalid trivially recursive definition of `a` in an export position.  [invalid-recursive-exported-annotation]

   3| const a = require('./recursive_module_cycle_A');
            ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:3:17

Invalid trivially recursive definition of `x` in an export position.  [invalid-recursive-exported-annotation]

   3| export const x: x = 0; // error recursive
                      ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:3:21

Cannot assign `0` to `x` because number [1] is incompatible with empty [2]. [incompatible-type]

   recursive_types.js:3:21
   3| export const x: x = 0; // error recursive
                          ^ [1]

References:
   recursive_types.js:3:17
   3| export const x: x = 0; // error recursive
                      ^ [2]


Error ------------------------------------------------------------------------------------------ recursive_types.js:5:26

Invalid trivially recursive definition of property `f` in an export position.  [invalid-recursive-exported-annotation]

   5| export const y: typeof y.f = 0; // error recursive
                               ^


Error ------------------------------------------------------------------------------------------ recursive_types.js:5:30

Cannot assign `0` to `y` because number [1] is incompatible with empty [2]. [incompatible-type]

   recursive_types.js:5:30
   5| export const y: typeof y.f = 0; // error recursive
                                   ^ [1]

References:
   recursive_types.js:5:17
   5| export const y: typeof y.f = 0; // error recursive
                      ^^^^^^^^^^ [2]


Error ------------------------------------------------------------------------------------------ recursive_types.js:7:28

Cannot assign `1` to `z` because number [1] is incompatible with empty [2]. [incompatible-type]

   recursive_types.js:7:28
   7| export const z: typeof z = 1; // TODO error recursive
                                 ^ [1]

References:
   recursive_types.js:7:17
   7| export const z: typeof z = 1; // TODO error recursive
                      ^^^^^^^^ [2]



Found 12 errors

Only showing the most relevant union/intersection branches.
To see all branches, re-run Flow with --show-all-branches
