Error ---------------------------------------------------------------------------------------------- concretize.js:10:16

Cannot create `C1` element because `EventTarget` [1] is incompatible with `C1` [2] in type argument `T` [3] of the first
parameter of property `onKeyDown`. [incompatible-type-arg]

   concretize.js:10:16
   10| <C1 onKeyDown={_onKeyDown} />;
                      ^^^^^^^^^^

References:
   <BUILTINS>/react-dom.js:74:56
   74| declare class SyntheticKeyboardEvent<+T: EventTarget = EventTarget>
                                                              ^^^^^^^^^^^ [1]
   concretize.js:9:47
    9| function _onKeyDown(e: SyntheticKeyboardEvent<C1>): void {};
                                                     ^^ [2]
   <BUILTINS>/react-dom.js:74:39
   74| declare class SyntheticKeyboardEvent<+T: EventTarget = EventTarget>
                                             ^ [3]


Error ---------------------------------------------------------------------------------------------- concretize.js:10:16

Cannot create `C1` element because `EventTarget` [1] is incompatible with `C1` [2] in type argument `T` of the first
parameter of property `onKeyDown`. [incompatible-type-arg]

   concretize.js:10:16
   10| <C1 onKeyDown={_onKeyDown} />;
                      ^^^^^^^^^^

References:
   <BUILTINS>/react-dom.js:74:42
   74| declare class SyntheticKeyboardEvent<+T: EventTarget = EventTarget>
                                                ^^^^^^^^^^^ [1]
   concretize.js:9:47
    9| function _onKeyDown(e: SyntheticKeyboardEvent<C1>): void {};
                                                     ^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:23:2

Cannot create `Foo` element because `Context` [1] is underconstrained by `Foo` element [2]. Either add explicit type
arguments or cast the expression to your expected type. [underconstrained-implicit-instantiation]

   test.js:23:2
   23| <Foo x={props.t} />;
        ^^^

References:
   test.js:18:3
   18|   Context: {},
         ^^^^^^^ [1]
   test.js:23:1
   23| <Foo x={props.t} />;
       ^^^^^^^^^^^^^^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:35:2

Cannot create `Bar` element because `Context` [1] is underconstrained by `Bar` element [2]. Either add explicit type
arguments or cast the expression to your expected type. [underconstrained-implicit-instantiation]

   test.js:35:2
   35| <Bar y={props.t} />;
        ^^^

References:
   test.js:30:3
   30|   Context: {},
         ^^^^^^^ [1]
   test.js:35:1
   35| <Bar y={props.t} />;
       ^^^^^^^^^^^^^^^^^^^ [2]



Found 4 errors
