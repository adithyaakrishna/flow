Error --------------------------------------------------------------------------------------------------- Traces.js:3:29

Cannot call `g0` with `x` bound to `y` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:3:29
   3| function f0(x: number) { g0(x) }
                                  ^

References:
   Traces.js:3:16
   3| function f0(x: number) { g0(x) }
                     ^^^^^^ [1]
   Traces.js:2:15
   2| function g0(y:string) { }
                    ^^^^^^ [2]

Trace:
* path 1:
  3: function f0(x: number) { g0(x) }
                                 ^ NumT [number]
  2: function g0(y:string) { }
                   ^^^^^^ ~> UseT(FunParam, StrT) [string] (from [not shown])


Error --------------------------------------------------------------------------------------------------- Traces.js:8:43

Cannot call `g1` with `y` bound to `b` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:8:43
   8| function f1(x: string, y: number) { g1(x, y) }
                                                ^

References:
   Traces.js:8:27
   8| function f1(x: string, y: number) { g1(x, y) }
                                ^^^^^^ [1]
   Traces.js:7:25
   7| function g1(a:string, b:string) { }
                              ^^^^^^ [2]

Trace:
* path 1:
  8: function f1(x: string, y: number) { g1(x, y) }
                                               ^ NumT [number]
  7: function g1(a:string, b:string) { }
                             ^^^^^^ ~> UseT(FunParam, StrT) [string] (from [not shown])


Error -------------------------------------------------------------------------------------------------- Traces.js:14:25

Cannot use operator `*` with operands string [1] and string [1] [unsafe-arithmetic]

   Traces.js:14:25
   14| f2(function(x) { return x * x });
                               ^^^^^

References:
   Traces.js:13:22
   13| function f2(xlam: (s:string) => number) { g2(xlam) }
                            ^^^^^^ [1]

Trace:
* path 1:
 14: f2(function(x) { return x * x });
                                 ^ StrT [string]
 14: f2(function(x) { return x * x });
                                 ^ ~> UseT(FunParam, OpenT) [`x`] (from [not shown])
 14: f2(function(x) { return x * x });
                             ^^^^^ ~> ArithT [`x` arithmetic operation `x`] (from [not shown])


Error -------------------------------------------------------------------------------------------------- Traces.js:19:37

Cannot use operator `*` with operands string [1] and number [2] [unsafe-arithmetic]

   Traces.js:19:37
   19| function double(n: string) { return n * 2 }
                                           ^^^^^

References:
   Traces.js:19:20
   19| function double(n: string) { return n * 2 }
                          ^^^^^^ [1]
   Traces.js:19:41
   19| function double(n: string) { return n * 2 }
                                               ^ [2]

Trace:
* path 1:
 19: function double(n: string) { return n * 2 }
                                         ^ StrT [string]
 19: function double(n: string) { return n * 2 }
                                         ^^^^^ ~> ArithT [`n` arithmetic operation number] (from [not shown])



Found 4 errors
Error --------------------------------------------------------------------------------------------------- Traces.js:3:29

Cannot call `g0` with `x` bound to `y` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:3:29
   3| function f0(x: number) { g0(x) }
                                  ^

References:
   Traces.js:3:16
   3| function f0(x: number) { g0(x) }
                     ^^^^^^ [1]
   Traces.js:2:15
   2| function g0(y:string) { }
                    ^^^^^^ [2]

Trace:
* path 1:
  3: function f0(x: number) { g0(x) }
                                 ^ NumT [number]
  2: function g0(y:string) { }
                   ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 2)
* path 2:
  3: function f0(x: number) { g0(x) }
                                 ^ OpenT [`x`]
  2: function g0(y:string) { }
                   ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 3)
* path 3:
  3: function f0(x: number) { g0(x) }
                              ^^ FunT [function]
  3: function f0(x: number) { g0(x) }
                              ^^^^^ ~> CallT [call of `g0`] (from [not shown])


Error --------------------------------------------------------------------------------------------------- Traces.js:8:43

Cannot call `g1` with `y` bound to `b` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:8:43
   8| function f1(x: string, y: number) { g1(x, y) }
                                                ^

References:
   Traces.js:8:27
   8| function f1(x: string, y: number) { g1(x, y) }
                                ^^^^^^ [1]
   Traces.js:7:25
   7| function g1(a:string, b:string) { }
                              ^^^^^^ [2]

Trace:
* path 1:
  8: function f1(x: string, y: number) { g1(x, y) }
                                               ^ NumT [number]
  7: function g1(a:string, b:string) { }
                             ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 2)
* path 2:
  8: function f1(x: string, y: number) { g1(x, y) }
                                               ^ OpenT [`y`]
  7: function g1(a:string, b:string) { }
                             ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 3)
* path 3:
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^ FunT [function]
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^^^^^^^ ~> CallT [call of `g1`] (from [not shown])


Error -------------------------------------------------------------------------------------------------- Traces.js:14:25

Cannot use operator `*` with operands string [1] and string [1] [unsafe-arithmetic]

   Traces.js:14:25
   14| f2(function(x) { return x * x });
                               ^^^^^

References:
   Traces.js:13:22
   13| function f2(xlam: (s:string) => number) { g2(xlam) }
                            ^^^^^^ [1]

Trace:
* path 1:
 14: f2(function(x) { return x * x });
                                 ^ StrT [string]
 14: f2(function(x) { return x * x });
                                 ^ ~> UseT(FunParam, OpenT) [`x`] (from path 2)
 14: f2(function(x) { return x * x });
                             ^^^^^ ~> ArithT [`x` arithmetic operation `x`] (from [not shown])
* path 2:
 13: function f2(xlam: (s:string) => number) { g2(xlam) }
                          ^^^^^^ StrT [string]
 14: f2(function(x) { return x * x });
                 ^ ~> UseT(FunParam, OpenT) [`x`] (from path 3)
 14: f2(function(x) { return x * x });
                 ^ OpenT [`x`]
 14: f2(function(x) { return x * x });
                                 ^ ~> ReposLowerT [`x`]
* path 3:
 14: f2(function(x) { return x * x });
        ^^^^^^^^^^^ FunT [function]
 13: function f2(xlam: (s:string) => number) { g2(xlam) }
                       ^^^^^^^^^^^^^^^^^^^^ ~> UseT(FunParam, FunT) [function type] (from [not shown])


Error -------------------------------------------------------------------------------------------------- Traces.js:19:37

Cannot use operator `*` with operands string [1] and number [2] [unsafe-arithmetic]

   Traces.js:19:37
   19| function double(n: string) { return n * 2 }
                                           ^^^^^

References:
   Traces.js:19:20
   19| function double(n: string) { return n * 2 }
                          ^^^^^^ [1]
   Traces.js:19:41
   19| function double(n: string) { return n * 2 }
                                               ^ [2]

Trace:
* path 1:
 19: function double(n: string) { return n * 2 }
                                         ^ StrT [string]
 19: function double(n: string) { return n * 2 }
                                         ^^^^^ ~> ArithT [`n` arithmetic operation number] (from path 2)
* path 2:
 19: function double(n: string) { return n * 2 }
                                         ^ OpenT [`n`]
 19: function double(n: string) { return n * 2 }
                                         ^^^^^ ~> ArithT [`n` arithmetic operation number]



Found 4 errors
Error --------------------------------------------------------------------------------------------------- Traces.js:3:29

Cannot call `g0` with `x` bound to `y` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:3:29
   3| function f0(x: number) { g0(x) }
                                  ^

References:
   Traces.js:3:16
   3| function f0(x: number) { g0(x) }
                     ^^^^^^ [1]
   Traces.js:2:15
   2| function g0(y:string) { }
                    ^^^^^^ [2]

Trace:
* path 1:
  3: function f0(x: number) { g0(x) }
                                 ^ NumT [number]
  2: function g0(y:string) { }
                   ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 2)
* path 2:
  3: function f0(x: number) { g0(x) }
                                 ^ OpenT [`x`]
  2: function g0(y:string) { }
                   ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 3)
* path 3:
  3: function f0(x: number) { g0(x) }
                              ^^ FunT [function]
  3: function f0(x: number) { g0(x) }
                              ^^^^^ ~> CallT [call of `g0`] (from path 4)
* path 4:
  3: function f0(x: number) { g0(x) }
                              ^^ OpenT [`g0`]
  3: function f0(x: number) { g0(x) }
                              ^^^^^ ~> CallT [call of `g0`]


Error --------------------------------------------------------------------------------------------------- Traces.js:8:43

Cannot call `g1` with `y` bound to `b` because number [1] is incompatible with string [2]. [incompatible-call]

   Traces.js:8:43
   8| function f1(x: string, y: number) { g1(x, y) }
                                                ^

References:
   Traces.js:8:27
   8| function f1(x: string, y: number) { g1(x, y) }
                                ^^^^^^ [1]
   Traces.js:7:25
   7| function g1(a:string, b:string) { }
                              ^^^^^^ [2]

Trace:
* path 1:
  8: function f1(x: string, y: number) { g1(x, y) }
                                               ^ NumT [number]
  7: function g1(a:string, b:string) { }
                             ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 2)
* path 2:
  8: function f1(x: string, y: number) { g1(x, y) }
                                               ^ OpenT [`y`]
  7: function g1(a:string, b:string) { }
                             ^^^^^^ ~> UseT(FunParam, StrT) [string] (from path 3)
* path 3:
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^ FunT [function]
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^^^^^^^ ~> CallT [call of `g1`] (from path 4)
* path 4:
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^ OpenT [`g1`]
  8: function f1(x: string, y: number) { g1(x, y) }
                                         ^^^^^^^^ ~> CallT [call of `g1`]


Error -------------------------------------------------------------------------------------------------- Traces.js:14:25

Cannot use operator `*` with operands string [1] and string [1] [unsafe-arithmetic]

   Traces.js:14:25
   14| f2(function(x) { return x * x });
                               ^^^^^

References:
   Traces.js:13:22
   13| function f2(xlam: (s:string) => number) { g2(xlam) }
                            ^^^^^^ [1]

Trace:
* path 1:
 14: f2(function(x) { return x * x });
                                 ^ StrT [string]
 14: f2(function(x) { return x * x });
                                 ^ ~> UseT(FunParam, OpenT) [`x`] (from path 2)
 14: f2(function(x) { return x * x });
                             ^^^^^ ~> ArithT [`x` arithmetic operation `x`] (from [not shown])
* path 2:
 13: function f2(xlam: (s:string) => number) { g2(xlam) }
                          ^^^^^^ StrT [string]
 14: f2(function(x) { return x * x });
                 ^ ~> UseT(FunParam, OpenT) [`x`] (from path 3)
 14: f2(function(x) { return x * x });
                 ^ OpenT [`x`]
 14: f2(function(x) { return x * x });
                                 ^ ~> ReposLowerT [`x`]
* path 3:
 14: f2(function(x) { return x * x });
        ^^^^^^^^^^^ FunT [function]
 13: function f2(xlam: (s:string) => number) { g2(xlam) }
                       ^^^^^^^^^^^^^^^^^^^^ ~> UseT(FunParam, FunT) [function type] (from path 4)
* path 4:
 14: f2(function(x) { return x * x });
     ^^ FunT [function]
 14: f2(function(x) { return x * x });
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ~> CallT [call of `f2`] (from path 5)
* path 5:
 14: f2(function(x) { return x * x });
     ^^ OpenT [`f2`]
 14: f2(function(x) { return x * x });
     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ~> CallT [call of `f2`]


Error -------------------------------------------------------------------------------------------------- Traces.js:19:37

Cannot use operator `*` with operands string [1] and number [2] [unsafe-arithmetic]

   Traces.js:19:37
   19| function double(n: string) { return n * 2 }
                                           ^^^^^

References:
   Traces.js:19:20
   19| function double(n: string) { return n * 2 }
                          ^^^^^^ [1]
   Traces.js:19:41
   19| function double(n: string) { return n * 2 }
                                               ^ [2]

Trace:
* path 1:
 19: function double(n: string) { return n * 2 }
                                         ^ StrT [string]
 19: function double(n: string) { return n * 2 }
                                         ^^^^^ ~> ArithT [`n` arithmetic operation number] (from path 2)
* path 2:
 19: function double(n: string) { return n * 2 }
                                         ^ OpenT [`n`]
 19: function double(n: string) { return n * 2 }
                                         ^^^^^ ~> ArithT [`n` arithmetic operation number]



Found 4 errors
