Error -------------------------------------------------------------------------------------------- class_static.js:13:11

Cannot use function type [1] with fewer than 2 type arguments. [missing-type-arg]

   class_static.js:13:11
   13| const y = OneTarg<string>(); // error, incorrect amount of args
                 ^^^^^^^

References:
   class_static.js:10:10
   10|   static <K, V>(): OneTarg<K, V>;
                ^^^^^^ [1]


Error ----------------------------------------------------------------------------------------------------- test.js:5:19

Cannot assign `identity<...>(...)` to `y` because number [1] is incompatible with string [2]. [incompatible-type]

   test.js:5:19
   5| const y: string = identity<_>(3); // Error, string incompatible with number.
                        ^^^^^^^^^^^^^^

References:
   test.js:5:31
   5| const y: string = identity<_>(3); // Error, string incompatible with number.
                                    ^ [1]
   test.js:5:10
   5| const y: string = identity<_>(3); // Error, string incompatible with number.
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:14:2

Cannot cast `a` to object type because string [1] is incompatible with number [2] in property `x`. [incompatible-cast]

   test.js:14:2
   14| (a: {x: number}); // Not ok, number incompatible with string, OK in LTI since targ pinned to any
        ^

References:
   test.js:12:12
   12| var b: {x: string} = a; // Concretize to string.
                  ^^^^^^ [1]
   test.js:14:9
   14| (a: {x: number}); // Not ok, number incompatible with string, OK in LTI since targ pinned to any
               ^^^^^^ [2]


Error ----------------------------------------------------------------------------------------------------- test.js:17:2

Cannot cast `z` to string because number [1] is incompatible with string [2]. [incompatible-cast]

   test.js:17:2
   17| (z: string); // Error, number lower bound string upper bound
        ^

References:
   test.js:16:23
   16| const z = identity<_>(3); // Give z a lower bound.
                             ^ [1]
   test.js:17:5
   17| (z: string); // Error, number lower bound string upper bound
           ^^^^^^ [2]


Error ----------------------------------------------------------------------------- under_constrained_speculation.js:3:2

Cannot cast `0` to string because number [1] is incompatible with string [2]. [incompatible-cast]

   under_constrained_speculation.js:3:2
   3| (0: string); // error: intentially left here to ensure that implicit instantiation
       ^ [1]

References:
   under_constrained_speculation.js:3:5
   3| (0: string); // error: intentially left here to ensure that implicit instantiation
          ^^^^^^ [2]



Found 5 errors
